# tests/atlocal.  Generated from atlocal.in by configure.                                     -*- shell-script -*-
# Configurable variable values for Bison test suite.

# Copyright (C) 2000-2015, 2018-2020 Free Software Foundation, Inc.
#
# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program.  If not, see <http://www.gnu.org/licenses/>.

# We need 'testsuite.h' (srcdir/test).
CPPFLAGS="-I$abs_top_srcdir/tests "

# Don't just check if $POSIXLY_CORRECT is set, as Bash, when launched
# as /bin/sh, sets the shell variable POSIXLY_CORRECT to y, but not
# the environment variable.
if env | grep '^POSIXLY_CORRECT=' >/dev/null; then
  POSIXLY_CORRECT_IS_EXPORTED=true
else
  POSIXLY_CORRECT_IS_EXPORTED=false
fi

## ------------------- ##
## C/C++ Compilation.  ##
## ------------------- ##

: ${CC='x86_64-poky-linux-gcc  -m64 -march=core2 -mtune=core2 -msse3 -mfpmath=sse -fstack-protector-strong  -D_FORTIFY_SOURCE=2 -Wformat -Wformat-security -Werror=format-security --sysroot=/home/hhpartners/yocto/build/tmp/work/core2-64-poky-linux/bison/3.5.3-r0/recipe-sysroot'}
: ${CXX='x86_64-poky-linux-g++  -m64 -march=core2 -mtune=core2 -msse3 -mfpmath=sse -fstack-protector-strong  -D_FORTIFY_SOURCE=2 -Wformat -Wformat-security -Werror=format-security --sysroot=/home/hhpartners/yocto/build/tmp/work/core2-64-poky-linux/bison/3.5.3-r0/recipe-sysroot'}

# Is the compiler GCC?
: ${GCC='yes'}

# Sometimes a test group needs to ignore gcc warnings, so it locally
# sets CFLAGS to this.
: ${NO_WERROR_CFLAGS=' -O2 -pipe -g -feliminate-unused-debug-types -fmacro-prefix-map=/home/hhpartners/yocto/build/tmp/work/core2-64-poky-linux/bison/3.5.3-r0=/usr/src/debug/bison/3.5.3-r0                      -fdebug-prefix-map=/home/hhpartners/yocto/build/tmp/work/core2-64-poky-linux/bison/3.5.3-r0=/usr/src/debug/bison/3.5.3-r0                      -fdebug-prefix-map=/home/hhpartners/yocto/build/tmp/work/core2-64-poky-linux/bison/3.5.3-r0/recipe-sysroot=                      -fdebug-prefix-map=/home/hhpartners/yocto/build/tmp/work/core2-64-poky-linux/bison/3.5.3-r0/recipe-sysroot-native=     '}
: ${NO_WERROR_CXXFLAGS=' -O2 -pipe -g -feliminate-unused-debug-types -fmacro-prefix-map=/home/hhpartners/yocto/build/tmp/work/core2-64-poky-linux/bison/3.5.3-r0=/usr/src/debug/bison/3.5.3-r0                      -fdebug-prefix-map=/home/hhpartners/yocto/build/tmp/work/core2-64-poky-linux/bison/3.5.3-r0=/usr/src/debug/bison/3.5.3-r0                      -fdebug-prefix-map=/home/hhpartners/yocto/build/tmp/work/core2-64-poky-linux/bison/3.5.3-r0/recipe-sysroot=                      -fdebug-prefix-map=/home/hhpartners/yocto/build/tmp/work/core2-64-poky-linux/bison/3.5.3-r0/recipe-sysroot-native=  -fvisibility-inlines-hidden  '}
: ${WNO_DEPRECATED_CXXFLAGS=''}

# But most of the time, we want -Werror.
: ${CFLAGS="$NO_WERROR_CFLAGS  "}
: ${CXXFLAGS="$NO_WERROR_CXXFLAGS "}

# If 'exit 77'; skip all C++ tests; otherwise ':'.
: ${BISON_CXX_WORKS='false'}

# Compiler flags to disable exception support.
: ${NO_EXCEPTIONS_CXXFLAGS=' -fno-exceptions'}

# Requiring a specific C++ standard.
: ${CXX98_CXXFLAGS='-std=c++98'}
: ${CXX03_CXXFLAGS='-std=c++03'}
: ${CXX11_CXXFLAGS='-std=c++11'}
: ${CXX14_CXXFLAGS='-std=c++14'}
: ${CXX17_CXXFLAGS='-std=c++17'}
: ${CXX2A_CXXFLAGS='-std=c++2a'}

# Be sure that the C++ compiler is not broken because of gnulib.  This
# cannot be checked in configure (gnulib is not parameterized yet),
# and checking this in every C++ test in AC_COMPILE_CXX is too costly.
#
# http://lists.gnu.org/archive/html/bug-bison/2013-06/msg00001.html
#
# FIXME: Check (say 2014) whether this is still needed.
if $BISON_CXX_WORKS; then
  # See AT_DATA_SOURCE_PROLOGUE.
  cat >conftest.cc <<EOF
#include <testsuite.h>
#include <iostream>

int main ()
{
  std::cout << "Works\n";
}
EOF
  $CXX $CXXFLAGS $CPPFLAGS $LDFLAGS $LIBS -o conftest conftest.cc
  case $? in
   0);;
   *) BISON_CXX_WORKS="as_fn_error 77 cannot-compile-simple-program";;
  esac
  rm -fr conftest*
fi

# Whether the compiler supports POSIXLY_CORRECT defined.
: ${C_COMPILER_POSIXLY_CORRECT='true'}
: ${CXX_COMPILER_POSIXLY_CORRECT='true'}

if $POSIXLY_CORRECT_IS_EXPORTED; then
  $C_COMPILER_POSIXLY_CORRECT || BISON_C_WORKS=false
  $CXX_COMPILER_POSIXLY_CORRECT || BISON_CXX_WORKS=false
fi

# Handle --compile-c-with-cxx here, once CXX and CXXFLAGS are known.
if "$at_arg_compile_c_with_cxx"; then
  CC_IS_CXX=1
  CC=$CXX
  NO_WERROR_CFLAGS=$NO_WERROR_CXXFLAGS
  CFLAGS="$CXXFLAGS $WNO_DEPRECATED_CXXFLAGS"
  BISON_C_WORKS=$BISON_CXX_WORKS
else
  CC_IS_CXX=0
fi


## ------- ##
## Other.  ##
## ------- ##

# Empty if no D compiler was found.
: ${DC=''}
: ${DCFLAGS=''}
if test x"$DC" = x; then
  BISON_DC_WORKS=false
else
  BISON_DC_WORKS=true
fi

# Empty if no javac was found
: ${CONF_JAVAC=''}

# Empty if no Java VM was found
: ${CONF_JAVA=''}

# We need egrep and perl.
: ${EGREP='/home/hhpartners/yocto/build/tmp/hosttools/grep -E'}
: ${PERL='/home/hhpartners/yocto/build/tmp/hosttools/perl'}

# Use simple quotes (lib/quote.c).
LC_CTYPE=C
export LC_CTYPE

# Are special link options needed?
: ${LDFLAGS='-Wl,-O1 -Wl,--hash-style=gnu -Wl,--as-needed -fstack-protector-strong -Wl,-z,relro,-z,now'}

# Are special libraries needed?
: ${LIBS="$abs_top_builddir/lib/libbison.a  "}

# Empty if no xsltproc was found
: ${XSLTPROC=''}
